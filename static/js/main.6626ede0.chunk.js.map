{"version":3,"sources":["presentation/components/app-drawer/styles.ts","presentation/components/app-drawer/index.tsx","presentation/components/header/styles.ts","presentation/components/header/index.tsx","AppStyles.ts","presentation/pages/data-ingestion/components/fields-selection/index.tsx","presentation/pages/data-ingestion/components/table/index.tsx","presentation/pages/data-ingestion/index.tsx","presentation/pages/templates/components/fields-selection/index.tsx","presentation/pages/templates/components/available-fields/index.tsx","presentation/pages/templates/index.tsx","presentation/routes/index.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","drawer","width","flexShrink","whiteSpace","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","spacing","breakpoints","up","toolbar","display","alignItems","justifyContent","padding","mixins","AppDrawer","props","classes","useTheme","routes","key","name","route","icon","Drawer","variant","className","clsx","open","paper","IconButton","onClick","handleDrawerClose","direction","Divider","List","map","r","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","appBar","zIndex","appBarShift","marginLeft","menuButton","marginRight","hide","Header","AppBar","position","Toolbar","color","handleDrawerOpen","edge","Typography","noWrap","root","content","flexGrow","FieldsSelecion","TextField","id","select","label","value","selectedAsset","onChange","handleChange","inputProps","assets","a","MenuItem","selectedTemplate","templates","data","columns","title","DataIngestionTable","settings","colHeaders","licenseKey","c","DataIngestion","useState","asset","template","state","setState","Paper","event","target","Button","size","selectedAssetType","assetTypes","cardHeader","list","height","backgroundColor","palette","background","overflow","margin","not","b","filter","indexOf","intersection","AvailableFields","React","checked","setChecked","left","setLeft","right","setRight","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","push","splice","numberOfChecked","items","length","handleToggleAll","customList","Card","CardHeader","avatar","Checkbox","indeterminate","disabled","dense","role","labelId","tabIndex","disableRipple","Grid","container","item","concat","Templates","assetType","templateName","Routes","path","exact","history","createBrowserHistory","App","setOpen","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.6626ede0.chunk.js","sourcesContent":["import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\ncreateStyles({\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  }\r\n}),\r\n);","import clsx from \"clsx\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport { useStyles } from \"./styles\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  handleDrawerClose: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nfunction AppDrawer(props: Props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const routes = [\r\n    { key: 1, name: \"Data Ingestion\", route: \"/data-ingestion\", icon: <InboxIcon /> },\r\n    { key: 2, name: \"Templates\", route: \"/templates\", icon: <MailIcon /> },\r\n  ];\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      className={clsx(classes.drawer, {\r\n        [classes.drawerOpen]: props.open,\r\n        [classes.drawerClose]: !props.open,\r\n      })}\r\n      classes={{\r\n        paper: clsx({\r\n          [classes.drawerOpen]: props.open,\r\n          [classes.drawerClose]: !props.open,\r\n        }),\r\n      }}\r\n    >\r\n      <div className={classes.toolbar}>\r\n        <IconButton onClick={props.handleDrawerClose}>\r\n          {theme.direction === \"rtl\" ? (\r\n            <ChevronRightIcon />\r\n          ) : (\r\n            <ChevronLeftIcon />\r\n          )}\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List>\r\n        {routes.map((r) => (\r\n          <ListItem button key={r.key} component={Link} to={r.route}>\r\n            <ListItemIcon>{r.icon}</ListItemIcon>\r\n            <ListItemText primary={r.name} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default AppDrawer;\r\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    }\r\n  }),\r\n);\r\n","\r\nimport clsx from 'clsx';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { useStyles } from './styles';\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  handleDrawerOpen: (e:  React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nfunction Header(props: Props){\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: props.open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={props.handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: props.open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Radix Engenharia\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header;","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3)\r\n    },\r\n  }),\r\n);","import { MenuItem, TextField } from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\ninterface AssetTypes {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\ninterface Template {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\ninterface Props {\r\n  selectedAsset: string;\r\n  selectedTemplate: string;\r\n  assets: AssetTypes[];\r\n  templates: Template[];\r\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nfunction FieldsSelecion(props: Props) {\r\n  return (\r\n    <div className=\"row w-100\">\r\n      <div className=\"col-12 col-md-6 my-3 px-3\">\r\n        <TextField\r\n          id=\"assets\"\r\n          select\r\n          label=\"Assets\"\r\n          value={props.selectedAsset}\r\n          onChange={props.handleChange}\r\n          inputProps={{\r\n            name: \"asset\",\r\n            id: \"asset\",\r\n          }}\r\n          variant=\"outlined\"\r\n        >\r\n          {props.assets.map((a) => {\r\n            return (\r\n              <MenuItem value={a.id} key={a.id}>\r\n                {a.name}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </TextField>\r\n      </div>\r\n      <div className=\"col-12 col-md-6 my-3 px-3\">\r\n        <TextField\r\n          id=\"templates\"\r\n          select\r\n          label=\"Templates\"\r\n          value={props.selectedTemplate}\r\n          onChange={props.handleChange}\r\n          inputProps={{\r\n            name: \"template\",\r\n            id: \"template\",\r\n          }}\r\n          variant=\"outlined\"\r\n        >\r\n          {props.templates.map((a) => {\r\n            return (\r\n              <MenuItem value={a.id} key={a.id}>\r\n                {a.name}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </TextField>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FieldsSelecion;\r\n","import HotTable from \"@handsontable/react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport Handsontable from \"handsontable\";\r\n\r\nconst data: any[] = [[]];\r\n\r\nconst columns: Handsontable.ColumnSettings[] = [\r\n  { title: \"Name\" },\r\n  { title: \"Location\" },\r\n  { title: \"Date\" },\r\n  { title: \"Asset Uptime\" },\r\n];\r\n\r\nfunction DataIngestionTable() {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-12 d-none d-md-block\">\r\n        <div id=\"hot-app\">\r\n          <HotTable\r\n            settings={{\r\n              data: data,\r\n              colHeaders: true,\r\n              columns: columns,\r\n              licenseKey: \"non-commercial-and-evaluation\",\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col-12 d-block d-md-none my-2\">\r\n          {columns.map(c => {\r\n              return (\r\n                <TextField\r\n                key={c.title}\r\n                label={c.title}\r\n                id={c.title}/>\r\n              )\r\n          })}\r\n\r\n      </div>\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataIngestionTable;\r\n","import { useState, ChangeEvent } from \"react\";\r\nimport { Button, Paper } from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\nimport FieldsSelecion from \"./components/fields-selection\";\r\nimport DataIngestionTable from \"./components/table\";\r\n\r\nconst assets = [\r\n  { id: \"1\", name: \"Asset 1\" },\r\n  { id: \"2\", name: \"Asset 2\" },\r\n];\r\n\r\nconst templates = [\r\n  { id: \"1\", name: \"Template 1\" },\r\n  { id: \"2\", name: \"Template 2\" },\r\n];\r\n\r\nfunction DataIngestion() {\r\n  const [state, setState] = useState<{ asset: string; template: string }>({\r\n    asset: \"\",\r\n    template: \"\",\r\n  });\r\n\r\n  const handleChange = (\r\n    event: ChangeEvent<{ name?: string; value: unknown }>\r\n  ) => {\r\n    const name = event.target.name as keyof typeof state;\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const renderTable = () => {\r\n    if (!state.asset || !state.template) {\r\n      return <></>;\r\n    }\r\n\r\n    return <DataIngestionTable />;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <h3> Data Ingestion</h3>\r\n      <Paper className=\"paper p-2\">\r\n        <FieldsSelecion\r\n          assets={assets}\r\n          templates={templates}\r\n          selectedAsset={state.asset}\r\n          selectedTemplate={state.template}\r\n          handleChange={handleChange}\r\n        />\r\n        {renderTable()}\r\n\r\n        <div className=\"row  justify-content-end my-2\">\r\n          <div className=\"col-12 col-md-2\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              className=\"save-button\"\r\n            >\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataIngestion;\r\n","import { MenuItem, TextField } from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\n\r\ninterface AssetTypes {\r\n  id: string;\r\n  name: string;\r\n}\r\n\r\ninterface Props {\r\n  selectedAssetType: string;\r\n  assetTypes: AssetTypes[];\r\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nfunction FieldsSelecion(props: Props) {\r\n  return (\r\n    <div className=\"row w-100\">\r\n      <div className=\"col-12 col-md-6 my-3 px-3\">\r\n        <TextField\r\n          label=\"My Template Name\"\r\n          id=\"templateName\"\r\n          onChange={props.handleChange}\r\n          inputProps={{\r\n            name: \"templateName\",\r\n            id: \"templateName\",\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"col-12 col-md-6 my-3 px-3\">\r\n        <TextField\r\n          id=\"assetType\"\r\n          select\r\n          label=\"Asset Types\"\r\n          value={props.selectedAssetType}\r\n          onChange={props.handleChange}\r\n          inputProps={{\r\n            name: \"assetType\",\r\n            id: \"assetType\",\r\n          }}\r\n          variant=\"outlined\"\r\n        >\r\n          {props.assetTypes.map((a) => {\r\n            return (\r\n              <MenuItem value={a.id} key={a.id}>\r\n                {a.name}\r\n              </MenuItem>\r\n            );\r\n          })}\r\n        </TextField>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FieldsSelecion;\r\n","import React from \"react\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    cardHeader: {\r\n      padding: theme.spacing(1, 2),\r\n    },\r\n    list: {\r\n      width: 250,\r\n      height: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      overflow: \"auto\",\r\n    },\r\n    button: {\r\n      margin: theme.spacing(0.5, 0),\r\n    },\r\n  })\r\n);\r\n\r\nfunction not(a: number[], b: number[]) {\r\n  return a.filter((value) => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a: number[], b: number[]) {\r\n  return a.filter((value) => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union(a: number[], b: number[]) {\r\n  return [...a, ...not(b, a)];\r\n}\r\n\r\nexport default function AvailableFields() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState<number[]>([]);\r\n  const [left, setLeft] = React.useState<number[]>([0, 1, 2, 3]);\r\n  const [right, setRight] = React.useState<number[]>([4, 5, 6, 7]);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n\r\n  const handleToggle = (value: number) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const numberOfChecked = (items: number[]) =>\r\n    intersection(checked, items).length;\r\n\r\n  const handleToggleAll = (items: number[]) => () => {\r\n    if (numberOfChecked(items) === items.length) {\r\n      setChecked(not(checked, items));\r\n    } else {\r\n      setChecked(union(checked, items));\r\n    }\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const customList = (title: React.ReactNode, items: number[]) => (\r\n    <Card>\r\n      <CardHeader\r\n        className={classes.cardHeader}\r\n        avatar={\r\n          <Checkbox\r\n            onClick={handleToggleAll(items)}\r\n            checked={\r\n              numberOfChecked(items) === items.length && items.length !== 0\r\n            }\r\n            indeterminate={\r\n              numberOfChecked(items) !== items.length &&\r\n              numberOfChecked(items) !== 0\r\n            }\r\n            disabled={items.length === 0}\r\n            inputProps={{ \"aria-label\": \"all items selected\" }}\r\n          />\r\n        }\r\n        title={title}\r\n      />\r\n      <Divider />\r\n      <List className={classes.list} dense component=\"div\" role=\"list\">\r\n        {items.map((value: number) => {\r\n          const labelId = `transfer-list-all-item-${value}-label`;\r\n\r\n          return (\r\n            <ListItem\r\n              key={value}\r\n              role=\"listitem\"\r\n              button\r\n              onClick={handleToggle(value)}\r\n            >\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  checked={checked.indexOf(value) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ \"aria-labelledby\": labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n      <Grid item>{customList(\"Available Fields\", left)}</Grid>\r\n      <Grid item>\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedRight}\r\n            disabled={leftChecked.length === 0}\r\n            aria-label=\"move selected right\"\r\n          >\r\n            &gt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedLeft}\r\n            disabled={rightChecked.length === 0}\r\n            aria-label=\"move selected left\"\r\n          >\r\n            &lt;\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>{customList(\"SelectedFields\", right)}</Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { useState, ChangeEvent } from \"react\";\r\nimport { Button, Paper } from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\nimport FieldsSelecion from \"./components/fields-selection\";\r\nimport AvailableFields from \"./components/available-fields\";\r\n\r\nconst assetTypes = [\r\n  { id: \"1\", name: \"Injection Point\" },\r\n  { id: \"2\", name: \"Well\" },\r\n];\r\n\r\nfunction Templates() {\r\n  const [state, setState] = useState<{\r\n    assetType: string;\r\n    templateName: string;\r\n  }>({\r\n    assetType: \"\",\r\n    templateName: \"\",\r\n  });\r\n\r\n  const handleChange = (\r\n    event: ChangeEvent<{ name?: string; value: unknown }>\r\n  ) => {\r\n    const name = event.target.name as keyof typeof state;\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <h3> New Template</h3>\r\n      <Paper className=\"paper p-2\">\r\n        <FieldsSelecion\r\n          assetTypes={assetTypes}\r\n          selectedAssetType={state.assetType}\r\n          handleChange={handleChange}\r\n        />\r\n        <AvailableFields />\r\n\r\n        <div className=\"row  justify-content-end my-2\">\r\n          <div className=\"col-12 col-md-2\">\r\n            <Button variant=\"contained\" color=\"primary\" size=\"large\" className=\"save-button\">\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Templates;\r\n","import { Route, Switch } from \"react-router\";\r\nimport { DataIngestion, Templates } from \"../pages\";\r\n\r\nfunction Routes() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact={true}>\r\n        <Templates />\r\n      </Route>\r\n      <Route path=\"/templates\">\r\n        <Templates />\r\n      </Route>\r\n      <Route path=\"/data-ingestion\">\r\n        <DataIngestion />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import { useState } from \"react\";\r\nimport { AppDrawer, Header } from \"./presentation/components\";\r\nimport { useStyles } from \"./AppStyles\";\r\nimport Routes from \"./presentation/routes\";\r\nimport { Router } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <div className={classes.root}>\r\n        <Header open={open} handleDrawerOpen={() => handleDrawerOpen()} />\r\n        <AppDrawer open={open} handleDrawerClose={() => handleDrawerClose()} />\r\n\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          <Routes />\r\n        </main>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n  );\r\n  \r\n  type Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n  };\r\n  \r\n  export function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://cra.link/PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then((registration) => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://cra.link/PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then((response) => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log('No internet connection found. App is running in offline mode.');\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then((registration) => {\r\n          registration.unregister();\r\n        })\r\n        .catch((error) => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }\r\n  ","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}